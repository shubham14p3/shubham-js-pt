{"version":3,"sources":["webpack:///./src/pages/pensieve/tags.js"],"names":["colors","theme","fontSizes","fonts","StyledTagsContainer","styled","Main","lightSlate","xxl","mixins","inlineLink","slate","SFMono","md","TagsPage","data","group","allMarkdownRemark","title","site","siteMetadata","location","className","to","map","tag","key","fieldValue","kebabCase","totalCount","pageQuery"],"mappings":"6FAAA,2JAQQA,EAA6BC,IAA7BD,OAAQE,EAAqBD,IAArBC,UAAWC,EAAUF,IAAVE,MAErBC,EAAsBC,YAAOC,KAAV,+EAAGD,CAAH,8IAOZL,EAAOO,WAEDL,EAAUM,IAGnBC,IAAOC,WACAV,EAAOO,WAELP,EAAOW,MACDR,EAAMS,OACRV,EAAUW,IA0DlBC,UAnDE,SAAC,GAAD,QACfC,KACuBC,EAFR,EAEbC,kBAAqBD,MAEHE,EAJL,EAGbC,KACEC,aAAgBF,MAGpBG,EAPe,EAOfA,SAPe,OASf,kBAAC,IAAD,CAAQA,SAAUA,GAChB,kBAAC,SAAD,CAAQH,MAAOA,IAEf,kBAACd,EAAD,KACE,0BAAMkB,UAAU,cACd,0BAAMA,UAAU,SAAhB,KACA,kBAAC,OAAD,CAAMC,GAAG,aAAT,iBAGF,oCACA,wBAAID,UAAU,cACXN,EAAMQ,KAAI,SAAAC,GAAG,OACZ,wBAAIC,IAAKD,EAAIE,YACX,kBAAC,OAAD,CAAMJ,GAAE,kBAAoBK,IAAUH,EAAIE,YAAlC,KACLF,EAAIE,WADP,IACmB,0BAAML,UAAU,SAAhB,IAA0BG,EAAII,WAA9B,cA8BxB,IAAMC,EAAS","file":"component---src-pages-pensieve-tags-js-f6da0b7866ee7a4b62b6.js","sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport PropTypes from 'prop-types';\nimport { Layout } from '@components';\nimport styled from 'styled-components';\nimport { theme, mixins, Main } from '@styles';\nconst { colors, fontSizes, fonts } = theme;\n\nconst StyledTagsContainer = styled(Main)`\n  max-width: 1000px;\n\n  h1 {\n    margin-bottom: 50px;\n  }\n  ul {\n    color: ${colors.lightSlate};\n    li {\n      font-size: ${fontSizes.xxl};\n\n      a {\n        ${mixins.inlineLink};\n        color: ${colors.lightSlate};\n        .count {\n          color: ${colors.slate};\n          font-family: ${fonts.SFMono};\n          font-size: ${fontSizes.md};\n        }\n      }\n    }\n  }\n`;\n\nconst TagsPage = ({\n  data: {\n    allMarkdownRemark: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n  location,\n}) => (\n  <Layout location={location}>\n    <Helmet title={title} />\n\n    <StyledTagsContainer>\n      <span className=\"breadcrumb\">\n        <span className=\"arrow\">&larr;</span>\n        <Link to=\"/pensieve\">All memories</Link>\n      </span>\n\n      <h1>Tags</h1>\n      <ul className=\"fancy-list\">\n        {group.map(tag => (\n          <li key={tag.fieldValue}>\n            <Link to={`/pensieve/tags/${kebabCase(tag.fieldValue)}/`}>\n              {tag.fieldValue} <span className=\"count\">({tag.totalCount})</span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </StyledTagsContainer>\n  </Layout>\n);\n\nTagsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired,\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n  location: PropTypes.object,\n};\n\nexport default TagsPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 2000, filter: { frontmatter: { draft: { ne: true } } }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}